import csv
import pwinput
from prettytable import PrettyTable
from datetime import datetime, timedelta

tabel_alat = PrettyTable()

# Fungsi untuk memperbarui tabel alat
def refresh_table_alat():
    tabel_alat.clear()
    tabel_alat.title = "DAFTAR ALAT BERAT"
    if user_type == "normal":
        tabel_alat.field_names = ["ID", "nama alat", "harga Sewa", "status", "Pemilik"]
        for alat in data_alat:
            if alat["status"] == "tersedia":
                tabel_alat.add_row([alat["ID"], alat["nama alat"], format_uang(alat["harga sewa"]), alat["status"], alat["pemilik"]])
    else:
        tabel_alat.field_names = ["ID", "nama alat", "harga Sewa", "status","Pemilik"]
        for alat in data_alat:
            tabel_alat.add_row([alat["ID"], alat["nama alat"], alat["harga sewa"], alat["status"], alat["pemilik"]])

# Mengambil waktu sekarang
today = datetime.now()
tanggal = today.strftime("%d/%m/%Y %H:%M")
tahun, bulan = (today.strftime("%Y/%m")).split('/')
tenggat = (today + timedelta(days=30)).strftime("%d/%m/%Y %H:%M")

# Fungsi untuk memuat data dari CSV
def load_data():
    global data_alat, data_user, userpass, data_pemasukan, adminpass
    try:
        data_alat = []
        with open("Data.csv", 'r', newline='') as file:
            reader = csv.reader(file)
            for row in reader:
                data_alat.append({"ID": row[0],
                                  "nama alat": row[1],
                                  "harga sewa": int(row[2]),
                                  "status": row[3],
                                  "pemilik": row[4]})
    except FileNotFoundError:
        data_alat = [
            {"ID" : "1",
             "nama alat" : "Excavator",
             "harga sewa" : 1500000,
             "status" : "tersedia",
             "pemilik" : ""},
            {"ID" : "2",
             "nama alat" : "Bulldozer",
             "harga sewa" : 2000000,
             "status" : "tersedia",
             "pemilik" : ""},
            {"ID" : "3",
             "nama alat" : "Crane",
             "harga sewa" : 2000000,
             "status" : "tersedia",
             "pemilik" : ""},
            {"ID" : "4",
             "nama alat" : "Forklift",
             "harga sewa" :950000,
             "status" : "tersedia",
             "pemilik" : ""},
            {"ID" : "5",
             "nama alat" : "Dozer",
             "harga sewa" : 1000000,
             "status" : "tersedia",
             "pemilik" : ""}
        ]
        with open("Data.csv", 'w', newline='') as file:
            fieldnames = ["ID", "nama alat", "harga sewa", "status", "pemilik"]
            writer = csv.DictWriter(file, fieldnames=fieldnames)
            for alat in data_alat:
                writer.writerow(alat)

    data_user = []
    try:
        with open("Data_user.csv", 'r', newline='') as file:
            reader = csv.reader(file)
            for row in reader:
                data_user.append({"username": row[0], "ID alat": row[1], "tanggal bayar": row[2], "tanggal kembali": row[3], "saldo": int(row[5])})
    except FileNotFoundError:
        open("Data_user.csv", 'w', newline='')

    userpass = []
    try:
        with open("userpass.csv", 'r', newline='') as file:
            reader = csv.reader(file)
            for row in reader:
                userpass.append({"username": row[0], "Pw": row[1]})
    except FileNotFoundError:
        open("userpass.csv", 'w', newline='')

    data_pemasukan = []
    try:
        with open("data_pemasukan.csv", 'r', newline='') as file:
            reader = csv.reader(file)
            for row in reader:
                data_pemasukan.append({"tahun": row[0], "bulan": row[1], "pemasukan": int(row[2])})
    except:
        with open("data_pemasukan.csv", 'w', newline='') as file:
            writer = csv.writer(file)
            writer.writerow([tahun, bulan, 0])

    adminpass = {"username": "Manisha", "Pw": "12345"}
    try:
        with open("adminpass.csv", 'r', newline='') as file:
            reader = csv.reader(file)
            for row in reader:
                adminpass = {"username": row[0], "Pw": row[1]}
    except FileNotFoundError:
        open("adminpass.csv", 'w', newline='')

# Fungsi untuk format uang
def format_uang(amount):
    return f"Rp {amount:,.0f}".replace(",", ".")

def inputhandler(prompt, inputtype="str"): #prompt adalah definisi paramater 1, inputtype adalah definisi parameter 2
#promt = masukkan inputan anda!
#inputtype ini kalau gak dipakai otomatis inputtype berupa str sebagai parameter 2
    while True: #while true adalah bentuk perulangan yang tidak memiliki batas
        try: 
            if inputtype == "str": #merubah inputtype menjadi string
                userinput = input(prompt) 
            elif inputtype == "int": #merubah inputtype menjadi integer
                userinput = int(input(prompt)) 
            elif inputtype == "digit": #merubah inputtype menjadi digit. digit adalah str yang berisi angkat tanpa koma tanpa negatif. hanya angka
                userinput = input(prompt) 
                if not userinput.isdigit(): 
                    print("Input hanya bisa berupa angka\n")
                    return inputhandler(prompt, "digit") #Return: Nilai yang dikembalikan ini bisa berupa hasil operasi dalam fungsi, nilai variabel, atau struktur data lainnya. Ketika fungsi dipanggil dalam ekspresi, fungsi tersebut akan "digantikan" oleh nilai yang dikembalikan.
            return userinput #mengembalikan nilai userinput
        except KeyboardInterrupt:
            print("\nGabisa Error!\n")
        except ValueError:
            print("Input hanya bisa berupa angka\n")
        except Exception as error:
            print(f"Error baru nih: {error}\n")

# Tambah alat menu admin
def tambah_alat():
    print("\n=== Menambah Alat Berat ===")
    while True:
        id = inputhandler("ID alat: ", "digit")
        if any(alat["ID"] == id for alat in data_alat):
            print("Alat Sudah Ada!\n")
        else:
            break

    print("\nnama alat")
    print("1. Excavator")
    print("2. Bulldozer")
    print("3. Crane")
    print("4. Forklift")
    print("5. Dozer")
    while True:
        pilih = inputhandler("Pilihan: ")
        if pilih == '1':
            nama_alat = "Excavator"
            break
        elif pilih == '2':
            nama_alat = "Bulldozer"
            break
        elif pilih == '3':
            nama_alat = "Crane"
            break
        elif pilih == '4':
            nama_alat = "Forklift"
            break
        elif pilih == '5':
            nama_alat = "Dozer"
        else:
            print("Pilihan Tidak Ada!")

    harga = int(inputhandler("Harga sewa: ", "digit"))

    # Menambahkan alat ke dalam data_produk
    data_alat.append({"ID": id, "nama alat": nama_alat, "harga sewa": harga, "status": "tersedia", "pemilik": ""})
    data_alat.sort(key=lambda produk: produk["ID"])  # Mengurutkan berdasarkan ID
    save_data()  # Simpan data ke CSV
    refresh_table_alat()  # Refresh tabel alat
    print(tabel_alat)  # Tampilkan tabel alat
    print(f"Berhasil menambahkan alat {nama_alat} dengan ID {id} ke data produk.")

# Fungsi untuk login penyewa
def login_user():
    global user_type
    username = input("Masukkan username: ")
    password = pwinput.pwinput("Masukkan Pw: ")
    
    for user in userpass:
        if user["username"] == username and user["Pw"] == password:
            user_type = "normal"
            print("Login berhasil sebagai penyewa.")
            return True
    print("Login gagal. Coba lagi.")
    return False

# Fungsi untuk login admin
def login_admin():
    username = input("Masukkan username admin: ")
    password = pwinput.pwinput("Masukkan Pw admin: ")
    adminpass = {"username": "Kel 4", "Pw": "12345"}

    if username == adminpass["username"] and password == adminpass["Pw"]:
        print("Login berhasil sebagai admin.")
        return True
    print("Login admin gagal.")
    return False

# Fungsi untuk menyewa alat
def sewa_alat():
    refresh_table_alat()
    print(tabel_alat)
    id_alat = input("Masukkan ID alat yang ingin disewa: ")
    
    for alat in data_alat:
        if alat["ID"] == id_alat and alat["status"] == "tersedia":
            alat["status"] = "tidak tersedia"
            pemilik = input("Masukkan nama pemilik: ")
            alat["pemilik"] = pemilik
            
            # Menyimpan data sewa ke data_user
            data_user.append({
                "username": pemilik,
                "ID alat": alat["nama alat"],
                "tanggal bayar": tanggal,
                "tanggal kembali": tenggat,
                "saldo": alat["harga sewa"]
            })
            print(f"Alat {alat['nama alat']} berhasil disewa.")
            return
    print("Alat tidak tersedia atau ID salah.")

# Fungsi untuk menyimpan data ke CSV
def save_data():
    with open("Data.csv", 'w', newline='') as file:
        fieldnames = ["ID", "nama alat", "harga sewa", "status", "pemilik"]
        writer = csv.DictWriter(file, fieldnames=fieldnames)
        writer.writeheader()
        for alat in data_alat:
            writer.writerow(alat)

    with open("Data_user.csv", 'w', newline='') as file:
        fieldnames = ["username", "ID alat", "tanggal bayar", "tanggal kembali", "saldo"]
        writer = csv.DictWriter(file, fieldnames=fieldnames)
        writer.writeheader()
        for user in data_user:
            writer.writerow(user)


# Fungsi utama untuk menjalankan program
def main():
    print('='*10, "Pilih Role", '='*10)
    while True:
        print("\n=== Sistem Penyewaan Alat Berat ===")
        print("1. Login sebagai penyewa")
        print("2. Login sebagai admin")
        print("3. Keluar")
        pilihan = input("Pilih opsi: ")

        if pilihan == "1":
            if login_user():
                while True:
                    print("\n1. Lihat daftar alat")
                    print("2. Sewa alat")
                    print("3. Top up Saldo")
                    print("4. Berhenti menyewa")
                    print("5. Keluar")

                    sub_pilihan = input("Pilih opsi: ")
                    if sub_pilihan == "1":
                        sewa_alat()
                        save_data()
                    elif sub_pilihan == "2":
                        break

        elif pilihan == "2":
            if login_admin():
                while True:
                    print("\n1. Lihat Daftar Alat")
                    print("2. Tambah alat")
                    print("3. Update alat")
                    print("4. Hapus alat")
                    print("5. Lihat Transaksi")
                    print("6. Keluar")
                    sub_pilihan = input("Pilih opsi: ")
                    if sub_pilihan == "1":
                        refresh_table_alat()
                        print(tabel_alat)
                    elif sub_pilihan == "2":
                        break

        elif pilihan == "3":
            print("Terima kasih telah menggunakan sistem.")
            break

def berhenti_menyewa():
    pemilik = input("Masukkan nama pemilik: ")
    id_alat = input("Masukkan ID alat yang ingin dikembalikan: ")
    
    for alat in data_alat:
        if alat["ID"] == id_alat and alat["pemilik"] == pemilik:
            alat["status"] = "tersedia"
            alat["pemilik"] = ""
            print(f"Alat {alat['nama alat']} berhasil dikembalikan.")
            return
            
    print("Alat tidak ditemukan atau pemilik tidak cocok.")

def tambah_alat():
    id = input("Masukkan ID alat: ")
    jenis = input("Masukkan nama alat: ")
    harga_sewa = int(input("Masukkan harga sewa: "))
    status = input("Masukkan status (tersedia/tidak tersedia): ")

    
    # Menambahkan alat baru ke data_alat
    data_alat.append({
        "ID": id,
        "nama alat": jenis,
        "harga sewa": harga_sewa,
        "status": status,
        "pemilik": ""
    })
    print(f"Alat {jenis} berhasil ditambahkan.")           

if __name__ == "__main__":
    main()


    # Fungsi Merge Sort untuk sorting
def merge_sort(arr, key):
    if len(arr) <= 1:
        return arr
    
    tengah = len(arr) // 2
    kiri = merge_sort(arr[:tengah], key)
    kanan = merge_sort(arr[tengah:], key)
    
    return merge(kiri, kanan, key)

def merge(kiri, kanan, key):
    result = []
    i = j = 0
    
    while i < len(kiri) and j < len(kanan):
        if kiri[i][key] <= kanan[j][key]:
            result.append(kiri[i])
            i += 1
        else:
            result.append(kanan[j])
            j += 1
    
    result.extend(kiri[i:])
    result.extend(kanan[j:])
    return result

# Fungsi Jump Search untuk searching
def jump_search(arr, x, key):
    n = len(arr)
    step = int(n ** 0.5)
    
    prev = 0
    while prev < n and arr[min(step, n)-1][key] < x:
        prev = step
        step += int(n ** 0.5)
        if prev >= n:
            return -1
    
    while prev < min(step, n):
        if arr[prev][key] == x:
            return prev
        prev += 1
    
    return -1

# Data.csv
ID, nama alat, harga per hari, status, pemilik
1, Excavator, 1500000, tersedia, ""
2, Bulldozer, 2000000, tersedia, ""
3, Crane, 2000000, tersedia, ""
4, Forklift, 950000, tersedia, ""
5, Dozer, 1000000, tersedia, ""

# userpass.csv
username, Pw
Nayla, 56789
Elmy, 67890

# data_pemasukan.csv
ID, User , id_alat, nama_alat, durasi, harga_total, tanggal

# adminpass.csv
username, Pw
Manisha, 12345

# Data_user.csv
username, ID alat, tanggal bayar, tanggal kembali, saldo
